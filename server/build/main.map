{"version":3,"sources":["webpack:///webpack/bootstrap f56838672df66b1d4a8e","webpack:///./src/index.js","webpack:///external \"express\"","webpack:///external \"dotenv/config\"","webpack:///./src/config/db.js","webpack:///external \"mongoose\""],"names":["app","express","port","process","env","connect","use","req","res","send","listen","console","log","DBUrl","mongoose","useNewUrlParser","db","connection","on","error","bind","once","Promise","global"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;;AAEA,MAAMA,MAAM,+CAAAC,EAAZ;AACA,MAAM,EAAEC,IAAF,KAAWC,QAAQC,GAAzB;;AAEA,mEAAAC;;AAEAL,IAAIM,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvBA,QAAIC,IAAJ,CAAS,gBAAT;AACH,CAFD;;AAYAT,IAAIU,MAAJ,CAAWR,IAAX,EAAiB,MAAM;AACnBS,YAAQC,GAAR,CAAY,uBAAZ;AACH,CAFD,E;;;;;;ACrBA,oC;;;;;;ACAA,0C;;;;;;;;;ACAA;;AAEA,MAAM,EAAEC,KAAF,KAAYV,QAAQC,GAA1B;;AAEA,gDAAAU,CAAST,OAAT,CAAiBQ,KAAjB,EAAwB,EAAEE,iBAAiB,IAAnB,EAAxB;AACA,MAAMC,KAAK,gDAAAF,CAASG,UAApB;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeP,QAAQQ,KAAR,CAAcC,IAAd,CAAmBT,OAAnB,EAA4B,mBAA5B,CAAf;AACAK,GAAGK,IAAH,CAAQ,MAAR,EAAgB,YAAY;AACxBV,YAAQC,GAAR,CAAY,sBAAZ;AACH,CAFD;;AAIA,gDAAAE,CAASQ,OAAT,GAAmBC,OAAOD,OAA1B;AACO,MAAMjB,UAAU,MAAM,gDAAAS,CAAST,OAAT,CAAiBQ,KAAjB,EAAwB,EAAEE,iBAAiB,IAAnB,EAAxB,CAAtB,C;;;;;;;;ACZP,qC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f56838672df66b1d4a8e","import express from \"express\"\nimport \"dotenv/config\"\nimport { connect } from \"./config/db\"\n\nconst app = express()\nconst { port } = process.env\n\nconnect()\n\napp.use(\"/\", (req, res) => {\n    res.send(\"Ca fonctionne!\")\n})\n\n\n\n\n\n\n\n\n\napp.listen(port, () => {\n    console.log(\"Le server fonctionne!\")\n})\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"dotenv/config\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv/config\"\n// module id = 3\n// module chunks = 0","import mongoose from \"mongoose\"\n\nconst { DBUrl } = process.env\n\nmongoose.connect(DBUrl, { useNewUrlParser: true });\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n    console.log('ConnectÃ© a MongoDB !')\n});\n\nmongoose.Promise = global.Promise\nexport const connect = () => mongoose.connect(DBUrl, { useNewUrlParser: true })\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/db.js","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}